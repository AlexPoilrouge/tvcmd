#! /usr/bin/env python3
#-*-Python-*-

import sys, os
import logging
import argparse

def interactive():
    import readline
    import rlcompleter
    readline.parse_and_bind("tab: complete")
    
    import code
    print("\nLaunching python interactive shell ...\n")
    code.interact(local=globals())
    
def main():
    parser = argparse.ArgumentParser(description = "tvcmd command line tv episodes tracker")

    parser.add_argument("-e", "--execute", default=None, metavar="COMMAND", help="execute COMMAND and exit")
    parser.add_argument("-f", "--format", action="store_true", help="print formated episodes and exit")
    parser.add_argument("--help-conf", action="store_true", help="print help on how to configure")
    
    args = parser.parse_args()
    
    # print configuration help
    if args.help_conf:
        import tvcmd.cons
        print("PATHS:")
        print(" config: %s"%(tvcmd.cons.CONFIGDIR+"/"+tvcmd.cons.MAINCONFIGFILE))
        print(" status-db: %s"%(tvcmd.cons.CONFIGDIR+"/"+tvcmd.cons.STATUSDBFILE))
        print("")
        print("EXAMPLE CONFIG:")
        print("")
        print("[general]")
        print("shows = an_idiot_abroad, the_office_us, lost")
        print("formats = https://torrentz.eu/verified?f=${show+}+s${season}e${episode}")
        return
    
    import tvcmd.cli
    ui = tvcmd.cli.Cmd()
    ui.load()
    
    # print formated urls and exit
    if args.format:
        ui.onecmd("format *")
        ui.exit()
        return
    
    if args.execute:
        ui.onecmd(args.execute)
        ui.exit()
        return
    
    # main execution mode
    ui.cmdloop()
    
if __name__ == "__main__":
    
    # DEBUG mode
    if os.environ.get("DEBUG"):
        
        logging.basicConfig(level=logging.DEBUG)
        sys.path.insert(0, os.path.dirname(__file__)+"/..")
        
        import tvcmd.cons
        tvcmd.cons.CONFIGDIR = tvcmd.cons.CONFIGDIR+"_debug"
        
        import traceback
        try: main()
        except SystemExit: pass
        except: traceback.print_exc()
        
        # interactive()
        
    # NORMAL mode
    else:
        
        logging.basicConfig(level=logging.INFO)
        main()
        sys.exit(0)
